<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.mmbase</groupId>
    <artifactId>mmbase-cms</artifactId>
    <version>1.9-SNAPSHOT</version>
  </parent>

  <artifactId>mmbase-commandserver</artifactId>
  <version>1.9-SNAPSHOT</version>

  <name>MMBase Command Server</name>
  <packaging>jar</packaging>

  <description>
    Very small java application that allows you to execute command-line applications from a seperate
    java process. This is because the System.execute call needs to fork() on unix OS-es, which means
    the executed command allocates just as much memory as the entire java JVM has allocated.

    Try java -jar mmbase-commandserver.jar -?

    This is mainly targeted at executing image-magick, but it could execute all kind of external commands.
  </description>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.4.2</version>
        <configuration>
          <archive>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
              <addClasspath>true</addClasspath>
              <mainClass>org.mmbase.util.CommandServer</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>8</source>
          <target>8</target>
          <maxmem>256M</maxmem>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <repositories>
    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
       <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>


</project>
