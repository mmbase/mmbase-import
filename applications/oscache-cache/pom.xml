<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.mmbase</groupId>
    <artifactId>mmbase-application-parent</artifactId>
    <version>1.9-SNAPSHOT</version>
  </parent>

  <artifactId>mmbase-oscache-cache</artifactId>
  <name>MMBase OSCache-Cache</name>
  <packaging>jar</packaging>

  <description>
    MMBase contains a pluggable architecture for it's caches, where you can write your own cache
    implementation to store MMBase objects in memory. This implementation uses the popular 'oscache'
    library, that can fall back to disk storage when needed. This allows you to cache a lot more
    inside MMBase without filling the internal memory. Note that you must only do this for objects
    which are more expensive to retrieve from Database than from disk (for instance difficult
    multilevel queries).
  </description>

  <dependencies>
    <dependency>
      <groupId>opensymphony</groupId>
      <artifactId>oscache</artifactId>
      <version>2.4.1</version>
      <exclusions>
        <exclusion>
          <!-- mmbase has a dependency on this already, we don't want 2 version of the same thing -->
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
        </exclusion>
        <exclusion>
          <groupId>javax.servlet</groupId>
          <artifactId>servlet-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>
 <repositories>
    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
       <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>
</project>
